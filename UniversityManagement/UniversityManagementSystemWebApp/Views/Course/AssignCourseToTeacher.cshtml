@model UniversityManagementSystemWebApp.Models.UserDefinedModels.CourseAssign
@{
    ViewBag.Title = "AssignCourseToTeacher";
}

<h2>Course Assign To Teacher</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @*<select class="form-control" name="departmentId" id="departmentId">
                    <option value="">Select...</option>
                    @foreach (var department in ViewBag.Departments)
                    {
                        <option value="@department.DepartmentId">@department.DepartmentName</option>
                    }
                </select>*@
                @Html.DropDownList("DepartmentId", null, "Select....", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherId, "Teacher", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @*<select class="form-control" name="teacherId" id="teacherId">
                    <option value="">Select...</option>
                </select>*@
                @Html.DropDownList("TeacherId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeacherTakenCredit, "Credit to be taken", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeacherTakenCredit,  new {htmlAttributes = new {@class = "form-control", @Value="", @readonly = "readonly"}})
                @Html.ValidationMessageFor(model => model.TeacherTakenCredit, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RemainingCredit, "Remaining Credit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RemainingCredit, new { htmlAttributes = new { @class = "form-control", @Value="", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.RemainingCredit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, "Course Code", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @*<select class="form-control" name="courseId" id="courseId">
                    <option value="">Select...</option>
                </select>*@
                @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseName, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control", @Value="", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseCredit, "Credit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CourseCredit, new { htmlAttributes = new { @class = "form-control", @Value="", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CourseCredit, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="AssignButton" type="submit" value="Assign" class="btn btn-default" onclick="return GetConfirmBox()"/>
            </div>
        </div>
        @if (ViewBag.CourseAssigned != null)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.Label((string)@ViewBag.CourseAssigned, htmlAttributes: new { @class = "text-danger", @id = "CourseAssigned" })
                </div>
            </div>
        }

    </div>
}

<div>
    @Html.ActionLink("View Course Statics", "ViewCourseStatics")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-2.2.0.js"></script>
    <script>
        function GetConfirmBox() {
            var val1 = parseFloat($('#RemainingCredit').val());
            var val2 = parseFloat($('#CourseCredit').val());
            var val = val1 - val2;
            if (val < 0) {
                var flag = confirm('Remaining credit is ' + val + '. Are you sure, you want to assign more credit?');
                if (flag == false)
                    return false;
            }
        }
    </script>

    <script>
        $(document).ready(function() {

            $("#DepartmentId").change(function() {
                var deptId = $("#DepartmentId").val();
                $("#TeacherId").empty();
                $("#CourseAssigned").val("");
                $("#TeacherTakenCredit").val("");
                $("#RemainingCredit").val("");
                $("#CourseName").val("");
                $("#CourseCredit").val("");
                var json = { departmentId: deptId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetTeachersByDepartmentId", "Teacher")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        $("#TeacherId").append('<option value=>Select...</option>');
                        $.each(data, function(key, value) {
                            $("#TeacherId").append('<option value=' + value.TeacherId + '>' + value.TeacherName + '</option>');
                        });
                    }
                });
                $("#CourseId").empty();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCoursesByDepartmentId", "Course")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        $("#CourseId").append('<option value=>Select...</option>');
                        $.each(data, function(key, value) {
                            $("#CourseId").append('<option value=' + value.CourseId + '>' + value.CourseCode + '</option>');
                        });
                    }
                });
            });
            $("#TeacherId").change(function() {

                var tchrId = $("#TeacherId").val();
                $("#TeacherTakenCredit").val("");
                $("#RemainingCredit").val("");
                var json = { teacherId: tchrId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetTeacherByName", "Teacher")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        $("#TeacherTakenCredit").val("" + data.TeacherTakenCredit);
                        $("#RemainingCredit").val("" + data.RemainingCredit);
                    }
                });
            });
            $("#CourseId").change(function() {

                var crsId = $("#CourseId").val();
                $("#CourseName").val("");
                $("#CourseCredit").val("");
                var json = { courseId: crsId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCourseByCode", "Course")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        $("#CourseName").val("" + data.CourseName);
                        $("#CourseCredit").val("" + data.CourseCredit);
                    }
                });
            });
            //$("#AssignButton").click(function() {
            //    $("#DepartmentId").val("0");
            //    $("#TeacherId").empty();
            //    $("#CourseId").empty();
            //});
        });
    </script>









}




